package com.project.Onlineshop.Mapper;

import com.project.Onlineshop.Dto.Request.EmployeeRequestDto;
import com.project.Onlineshop.Dto.Response.EmployeeResponseDto;
import com.project.Onlineshop.Entity.Employee;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import java.time.LocalDate;
import java.time.Period;


@Mapper(componentModel = "spring")  // instead of creating the Bean manually
public interface EmployeeMapper {
    EmployeeMapper INSTANCE = Mappers.getMapper(EmployeeMapper.class);
    @Mapping(target = "age", expression = "java(EmployeeMapper.calculateAge(employee.getDateOfBirth()))")
    @Mapping(target = "dateOfBirth", source = "employee.dateOfBirth")
    EmployeeResponseDto toDto(Employee employee);

    //toEntity will be used when creating new user, so the attributes can be added here instead of the service class
    @Mapping(target = "id", ignore = true) // Autogenerated
    @Mapping(target = "createdAt", expression = "java(java.time.LocalDateTime.now())")
    @Mapping(target = "isEnabled", constant = "true")
    @Mapping(target = "role", ignore = true)  // will be set in the service class
    Employee toEntity(EmployeeRequestDto employeeRequestDto);
    static int calculateAge(LocalDate birthDate) {
        LocalDate currentDate = LocalDate.now();
        return Period.between(birthDate, currentDate).getYears();
    }
}